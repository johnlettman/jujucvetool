[tool.poetry]
name = "jujucvetool"
version = "0.1.0"
description = "A simple tool to identify CVEs across Juju environments and generate scripts to resolve them through updates"
authors = ["John P. Lettman <the@johnlettman.com>"]
readme = "README.md"
repository = "https://github.com/johnlettman/jujucvetool"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Operating System :: POSIX :: Linux",
]
packages = [
    { include = "jujucvetool", from = "src" }
]

[tool.poetry.scripts]
jujucvetool = "jujucvetool.__main__:main"

[tool.poetry.dependencies]
python = "^3.9"
rich = "^13.9.4"
click = "^8.1.8"
rich-click = "^1.8.8"
fabric = "^3.2.2"
invoke = "^2.2.0"
python-slugify = "^8.0.4"

# cvescan and friends
cvescan = { git = "https://github.com/canonical/sec-cvescan" }
python-apt = { git = "https://git.launchpad.net/python-apt", branch = "2.4.y" }
validators = "^0.34.0"
vistir = "^0.8.0"
ust-download-cache = "^2.1.0"
tabulate = "^0.9.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
isort = "^6.0.0"
black = "^25.1.0"
mypy = "^1.15"
flake8 = "^7.1.2"
Flake8-pyproject = "^1.2.3"
flake8-bugbear = "^24.12.12"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"

[tool.poetry.group.coverage]
optional = true

[tool.poetry.group.coverage.dependencies]
coverage = "^7.6.12"
pytest-cov = "^6.0.0"

[tool.pytest.ini_options]
pythonpath = "src"
addopts = [
    "--import-mode=importlib",
]

[tool.coverage.run]
branch = true
omit = ["*/tests/*"]

[tool.coverage.report]
show_missing = true

[tool.coverage.html]
directory = "htmlcov"

[tool.black]
line-length = 120
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
(
    \.pytest_cache
  | \.git
  | \.mypy_cache
)
'''

[tool.isort]
profile = 'black'
line_length = 120
force_single_line = true
star_first = true
group_by_package = true
force_sort_within_sections = true
lines_after_imports = 2
honor_noqa = true
atomic = true
ignore_comments = false
skip_gitignore = true
src_paths = ['src', 'tests']

[tool.flake8]
max-line-length = 120
max-complexity = 18
count = true
show-source = true
statistics = true
disable-noqa = false
enable-extensions = [
    'G', # flake8-logging-format
]
extend-exclude = [
    '.github',
    '.Python',
    '.*.pyc',
    '.*.pyo',
    '.*.pyd',
    '.*.py.class',
    '*.egg-info',
    'venv*',
    '.venv*',
    '.*_cache',
    'lib',
    'lib64',
    '.*.so',
    'build',
    'dist',
    'sdist',
    'wheels',
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
